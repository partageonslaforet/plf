pipeline {
    agent any
    environment {
        GITHUB_TOKEN=credentials('plf-github-token')
    }
    options {
        // This is required if you want to clean before build
        skipDefaultCheckout(true)
    }

    stages{


        // stage("Cleanup") {
        //     steps{

        //         cleanWs notFailBuild: true
        //         // sh 'docker system prune -a --volumes --force'
        //         echo "cleaning ${env.JOB_NAME}..."

        //     }
        // }
        
        // stage("Github checkout") {
        //     steps{

        //         checkout scmGit(branches: [[name: '*/jenkins-test']], extensions: [], userRemoteConfigs: [[url: "https://github.com/partageonslaforet/plf.git"]])
        //         echo "Checkout ${env.JOB_NAME}..."

        //     }
        // }




        // stage('Build docker image'){
        //     steps{

        //         sh 'docker build -t plf-dev-app:1.0 -f ./docker/dev/app/dockerfile.app .'
        //         echo "Checkout ${env.JOB_NAME}..."
        //     }
        // }



        stage('Login to GitHub'){
            steps{
                sh 'echo $GITHUB_TOKEN_PSW | docker login ghcr.io -u $GITHUB_TOKEN_USR --password-stdin'
                // echo "GITHUB_TOKEN_PSW $GITHUB_TOKEN_PSW"
                echo "GITHUB_TOKEN_USR $GITHUB_TOKEN_USR"
                echo " ${env.JOB_NAME} Logged in to GitHub..."
            }
        }



        stage('Push image to GitHub'){
            steps{
                sh 'docker push plf-dev-app:1.0'
                echo "Checkout ${env.JOB_NAME}..."
            }
        }



    }

    post {
        // Clean after build
        always {
            sh 'docker logout'
            // cleanWs(cleanWhenNotBuilt: false,
            //         deleteDirs: true,
            //         disableDeferredWipeout: true,
            //         notFailBuild: true,
            //         patterns: [[pattern: '.gitignore', type: 'INCLUDE'],
            //                    [pattern: '.propsfile', type: 'EXCLUDE']])
        }
    }

}